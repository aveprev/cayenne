package org.apache.cayenne.testdo.testmap.auto;

import java.math.BigDecimal;
import java.util.Date;

import org.apache.cayenne.CayenneDataObject;

/**
 * Class _ReturnTypesMap was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _ReturnTypesMap1 extends CayenneDataObject {

    public static final String BIGINT_COLUMN_PROPERTY = "bigintColumn";
    public static final String BIT_COLUMN_PROPERTY = "bitColumn";
    public static final String BOOLEAN_COLUMN_PROPERTY = "booleanColumn";
    public static final String CHAR_COLUMN_PROPERTY = "charColumn";
    public static final String CLOB_COLUMN_PROPERTY = "clobColumn";
    public static final String DATE_COLUMN_PROPERTY = "dateColumn";
    public static final String DECIMAL_COLUMN_PROPERTY = "decimalColumn";
    public static final String DOUBLE_COLUMN_PROPERTY = "doubleColumn";
    public static final String FLOAT_COLUMN_PROPERTY = "floatColumn";
    public static final String INTEGER_COLUMN_PROPERTY = "integerColumn";
    public static final String LONGVARCHAR_COLUMN_PROPERTY = "longvarcharColumn";
    public static final String NUMERIC_COLUMN_PROPERTY = "numericColumn";
    public static final String REAL_COLUMN_PROPERTY = "realColumn";
    public static final String SMALLINT_COLUMN_PROPERTY = "smallintColumn";
    public static final String TIME_COLUMN_PROPERTY = "timeColumn";
    public static final String TIMESTAMP_COLUMN_PROPERTY = "timestampColumn";
    public static final String TINYINT_COLUMN_PROPERTY = "tinyintColumn";
    public static final String VARCHAR_COLUMN_PROPERTY = "varcharColumn";

    public static final String AAAID_PK_COLUMN = "AAAID";

    public void setBigintColumn(Long bigintColumn) {
        writeProperty("bigintColumn", bigintColumn);
    }
    public Long getBigintColumn() {
        return (Long)readProperty("bigintColumn");
    }

    public void setBitColumn(Boolean bitColumn) {
        writeProperty("bitColumn", bitColumn);
    }
    public Boolean getBitColumn() {
        return (Boolean)readProperty("bitColumn");
    }

    public void setBooleanColumn(Boolean booleanColumn) {
        writeProperty("booleanColumn", booleanColumn);
    }
    public Boolean getBooleanColumn() {
        return (Boolean)readProperty("booleanColumn");
    }

    public void setCharColumn(String charColumn) {
        writeProperty("charColumn", charColumn);
    }
    public String getCharColumn() {
        return (String)readProperty("charColumn");
    }

    public void setClobColumn(String clobColumn) {
        writeProperty("clobColumn", clobColumn);
    }
    public String getClobColumn() {
        return (String)readProperty("clobColumn");
    }

    public void setDateColumn(Date dateColumn) {
        writeProperty("dateColumn", dateColumn);
    }
    public Date getDateColumn() {
        return (Date)readProperty("dateColumn");
    }

    public void setDecimalColumn(BigDecimal decimalColumn) {
        writeProperty("decimalColumn", decimalColumn);
    }
    public BigDecimal getDecimalColumn() {
        return (BigDecimal)readProperty("decimalColumn");
    }

    public void setDoubleColumn(Double doubleColumn) {
        writeProperty("doubleColumn", doubleColumn);
    }
    public Double getDoubleColumn() {
        return (Double)readProperty("doubleColumn");
    }

    public void setFloatColumn(Float floatColumn) {
        writeProperty("floatColumn", floatColumn);
    }
    public Float getFloatColumn() {
        return (Float)readProperty("floatColumn");
    }

    public void setIntegerColumn(Integer integerColumn) {
        writeProperty("integerColumn", integerColumn);
    }
    public Integer getIntegerColumn() {
        return (Integer)readProperty("integerColumn");
    }

    public void setLongvarcharColumn(String longvarcharColumn) {
        writeProperty("longvarcharColumn", longvarcharColumn);
    }
    public String getLongvarcharColumn() {
        return (String)readProperty("longvarcharColumn");
    }

    public void setNumericColumn(BigDecimal numericColumn) {
        writeProperty("numericColumn", numericColumn);
    }
    public BigDecimal getNumericColumn() {
        return (BigDecimal)readProperty("numericColumn");
    }

    public void setRealColumn(Float realColumn) {
        writeProperty("realColumn", realColumn);
    }
    public Float getRealColumn() {
        return (Float)readProperty("realColumn");
    }

    public void setSmallintColumn(Short smallintColumn) {
        writeProperty("smallintColumn", smallintColumn);
    }
    public Short getSmallintColumn() {
        return (Short)readProperty("smallintColumn");
    }

    public void setTimeColumn(Date timeColumn) {
        writeProperty("timeColumn", timeColumn);
    }
    public Date getTimeColumn() {
        return (Date)readProperty("timeColumn");
    }

    public void setTimestampColumn(Date timestampColumn) {
        writeProperty("timestampColumn", timestampColumn);
    }
    public Date getTimestampColumn() {
        return (Date)readProperty("timestampColumn");
    }

    public void setTinyintColumn(Byte tinyintColumn) {
        writeProperty("tinyintColumn", tinyintColumn);
    }
    public Byte getTinyintColumn() {
        return (Byte)readProperty("tinyintColumn");
    }

    public void setVarcharColumn(String varcharColumn) {
        writeProperty("varcharColumn", varcharColumn);
    }
    public String getVarcharColumn() {
        return (String)readProperty("varcharColumn");
    }

}
